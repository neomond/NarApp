//
//  BalanceTransferInteractor.swift
//  NarTask
//
//  Created by Nazrin Atayeva on 28.01.24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//


import UIKit
import NarHubNetworkKit


protocol BalanceTransferBusinessLogic {
    
    func fetchBalanceTransfer(request: BalanceTransfer.FetchOptions.Request)
}

protocol BalanceTransferDataStore { }

final class BalanceTransferInteractor: BalanceTransferBusinessLogic, BalanceTransferDataStore {
    
    var presenter: BalanceTransferPresentationLogic?
    lazy var worker: BalanceTransferWorkingLogic = BalanceTransferWorker()
    
    
    var transferAmounts: BalanceTransferResponse?
    
    
    // MARK: Business Logic
    func fetchBalanceTransfer(request: BalanceTransfer.FetchOptions.Request) {
        self.worker.fetchBalanceTransfer(completion: { [weak self] response in
            guard let self = self else { return }
            
            self.transferAmounts = response
            let response = BalanceTransfer.FetchOptions.Response(balanceTransfer: response )
            self.presenter?.presentTransferAmounts(response: response)
            
        })
    }
}

